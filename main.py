"""
Main application menu
(–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
"""

import ui
import mysql_connector
import config
from log_writer import log_search, logger
import log_stats
from formatter import format_results


def search_by_keyword_menu(mysql_conn):
    logger.info("–ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.")
    keyword = ui.get_keyword_input()
    offset = 0
    try:
        while True:
            results = mysql_connector.search_by_keyword(mysql_conn, keyword, offset=offset)
            ui.show_results(results)
            log_search("keyword", {"keyword": keyword}, len(results))
            logger.debug(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É '{keyword}'.")
            if len(results) < 10 or not ui.continue_prompt():
                break
            offset += 10
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É", exc_info=True)
        ui.show_error(f"–û—à–∏–±–∫–∞: {e}")
        log_search("error", {"type": "keyword", "message": str(e)}, 0)


def search_by_genre_and_year_menu(mysql_conn):
    logger.info("–ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥–∞–º.")
    genres, min_year, max_year = mysql_connector.get_genre_and_years(mysql_conn)
    genre, year_from, year_to = ui.genre_year_input(genres, min_year, max_year)
    if genre:
        offset = 0
        try:
            while True:
                results = mysql_connector.search_by_genre_and_year(mysql_conn, genre, year_from, year_to, offset=offset)
                ui.show_results(results)
                log_search("genre_year", {
                    "genre": genre,
                    "year_from": year_from,
                    "year_to": year_to
                }, len(results))
                logger.debug(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ñ–∏–ª—å–º–æ–≤ –≤ –∂–∞–Ω—Ä–µ '{genre}' –∑–∞ {year_from}-{year_to}.")
                if len(results) < 10 or not ui.continue_prompt():
                    break
                offset += 10
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∂–∞–Ω—Ä—É –∏ –≥–æ–¥–∞–º", exc_info=True)
            ui.show_error(f"–û—à–∏–±–∫–∞: {e}")
            log_search("error", {"type": "genre_year", "message": str(e)}, 0)


def show_statistics_menu():
    logger.info("–ü–æ–∫–∞–∑ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    choice = ui.show_statistics_menu()
    if choice == "1":
        logger.info("–ü–æ–∫–∞–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")
        try:
            stats = log_stats.get_top_searches()
            logger.debug(f"–ü–æ–ª—É—á–µ–Ω–æ {len(stats)} –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")
            format_results(stats, mode="logs")
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", exc_info=True)
            ui.show_error(f"–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    elif choice == "2":
        logger.info("–ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")
        try:
            stats = log_stats.get_recent_unique_searches()
            logger.debug(f"–ü–æ–ª—É—á–µ–Ω–æ {len(stats)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.")
            format_results(stats, mode="logs")
        except Exception as e:
            logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤", exc_info=True)
            ui.show_error(f"–û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    else:
        ui.show_error("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø—É–Ω–∫—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")


def main():
    """
    Main application loop.
    (–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    """
    mysql_conn = mysql_connector.connection(config.MYSQL_CONFIG)
    logger.info("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL.")
    logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ.")

    print()  # üîπ –ß–∏—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–¥–µ–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤ –æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

    try:
        ui.print_message("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Movie Search! –ù–∞–π–¥—ë–º –∫–∏–Ω–æ –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
        while True:
            choice = ui.main_menu()
            logger.debug(f"–í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é: {choice}")

            if choice == 1:
                search_by_keyword_menu(mysql_conn)
            elif choice == 2:
                search_by_genre_and_year_menu(mysql_conn)
            elif choice == 3:
                show_statistics_menu()
            elif choice == 4:
                ui.print_message("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                logger.info("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
                break
            else:
                ui.show_error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –æ—Ç 1 –¥–æ 4.")
                logger.warning(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤—ã–±–æ—Ä –≤ –º–µ–Ω—é: {choice}")
    finally:
        mysql_conn.close()
        logger.info("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL –∑–∞–∫—Ä—ã—Ç–æ.")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        ui.print_message("\n–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ KeyboardInterrupt.")
